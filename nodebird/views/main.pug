extends layout

block content
  .timeline
    if user
      div
        form#twit-form(action='/post' method='post')
          .input-group
            textarea#twit(name='content' maxlength=140)
          div
            button#twit-btn.btn(type='submit') 짹짹
    .twits
      form#hashtag-form(action='/post/hashtag')
        input(type='text' name='hashtag' placeholder='태그 검색')
        button.btn 검색
      for twit in twits
        .twit
          input.twit-user-id(type='hidden' value=twit.user.id)
          input.twit-id(type='hidden' value=twit.id)
          .twit-author= twit.user.nick
          -const follow = user && user.Followings.map(f => f.id).includes(twit.user.id);
          if user && user.id !== twit.user.id && !follow
            button.twit-follow 팔로우하기
          else if user &&  user.id !== twit.user.id && follow
            button.twit-unfollow 팔로우끊기
          .twit-content= twit.content
          if twit.img
            .twit-img
              img(src=twit.img alt='섬네일  ')
          //
            -const like = user && twit && twit.Liker.map(l => l.id).includes(user.id);
            if user && !like
              button.like 좋아요
            else if user && like
              button.unlike 좋아요 취소
            if user && user.id === twit.user.id
              button.delete 게시글 삭제
  script.
    [].forEach.call(document.querySelectorAll('.twit-follow'), function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        if (isLoggedIn) {
          var userId = tag.parentNode.querySelector('.twit-user-id').value;
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('팔로잉하시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/user/' + userId + '/follow');
              xhr.send();
            }
          }
        }
      });
    });
    [].forEach.call(document.querySelectorAll('.twit-unfollow'), function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        if (isLoggedIn) {
          var userId = tag.parentNode.querySelector('.twit-user-id').value;
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('팔로잉 끊으시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('POST', '/user/' + userId + '/unfollow');
              xhr.send();
            }
          }
        }
      });
    });
    [].forEach.call(document.querySelectorAll('.like'), function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        var twitId = tag.parentNode.querySelector('.twit-id').value;
        if (isLoggedIn) {
          var xhr = new XMLHttpRequest();
          xhr.onload = function () {
            if (xhr.status === 200) {
              location.reload();
            } else {
              console.error(xhr.responseText);
            }
          };
          xhr.open('POST', '/post/' + twitId + '/like');
          xhr.send();
        }
      });
    });
    [].forEach.call(document.querySelectorAll('.unlike'), function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        var twitId = tag.parentNode.querySelector('.twit-id').value;
        if (isLoggedIn) {
          var xhr = new XMLHttpRequest();
          xhr.onload = function () {
            if (xhr.status === 200) {
              location.reload();
            } else {
              console.error(xhr.responseText);
            }
          };
          xhr.open('DELETE', '/post/' + twitId + '/like');
          xhr.send();
        }
      });
    });
    [].forEach.call(document.querySelectorAll('.delete'), function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id');
        var twitId = tag.parentNode.querySelector('.twit-id').value;
        if (isLoggedIn) {
          var userId = tag.parentNode.querySelector('.twit-user-id').value;
          var myId = isLoggedIn.value;
          if (userId === myId) {
            if (confirm('게시글을 삭제하시겠습니까?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText);
                }
              };
              xhr.open('DELETE', '/post/' + twitId);
              xhr.send();
            }
          }
        }
      });
    });